<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20241.24.0208.0337                               -->
<workbook original-version='18.1' source-build='2024.1.0 (20241.24.0208.0337)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Top N' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='15'>
        <calculation class='tableau' formula='15' />
        <range max='100' min='1' />
      </column>
      <column caption='Parameter 2' datatype='integer' default-format='N' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='10'>
        <calculation class='tableau' formula='10' />
        <range max='100' min='1' />
      </column>
      <column caption='Parameter 3' datatype='integer' name='[Parameter 3]' param-domain-type='any' role='measure' type='quantitative' value='15'>
        <calculation class='tableau' formula='15' />
      </column>
    </datasource>
    <datasource caption='us income cleaned (us income cleaned)' inline='true' name='federated.008fz9d0aywz8x1e81epz1dnocyg' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='us income cleaned' name='excel-direct.0q0rsvo0hrybku1cd4uma02jhhz8'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/tpalm/OneDrive/Desktop/MySQLFiles/Projects/US Income/us income cleaned.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0q0rsvo0hrybku1cd4uma02jhhz8' name='us income cleaned' table='[&apos;us income cleaned$&apos;]' type='table'>
          <columns gridOrigin='A1:V10001:no:A1:V10001:0' header='yes' outcome='6'>
            <column datatype='integer' name='row_id' ordinal='0' />
            <column datatype='integer' name='id' ordinal='1' />
            <column datatype='integer' name='State_Code' ordinal='2' />
            <column datatype='string' name='State_Name' ordinal='3' />
            <column datatype='string' name='State_ab' ordinal='4' />
            <column datatype='string' name='County' ordinal='5' />
            <column datatype='string' name='City' ordinal='6' />
            <column datatype='string' name='Place' ordinal='7' />
            <column datatype='string' name='Type' ordinal='8' />
            <column datatype='string' name='Primary' ordinal='9' />
            <column datatype='integer' name='Zip_Code' ordinal='10' />
            <column datatype='integer' name='Area_Code' ordinal='11' />
            <column datatype='integer' name='ALand' ordinal='12' />
            <column datatype='integer' name='AWater' ordinal='13' />
            <column datatype='real' name='Lat' ordinal='14' />
            <column datatype='real' name='Lon' ordinal='15' />
            <column datatype='integer' name='id2' ordinal='16' />
            <column datatype='string' name='State_Name3' ordinal='17' />
            <column datatype='integer' name='Mean' ordinal='18' />
            <column datatype='integer' name='Median' ordinal='19' />
            <column datatype='integer' name='Stdev' ordinal='20' />
            <column datatype='real' name='sum_w' ordinal='21' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0q0rsvo0hrybku1cd4uma02jhhz8' name='us income cleaned' table='[&apos;us income cleaned$&apos;]' type='table'>
          <columns gridOrigin='A1:V10001:no:A1:V10001:0' header='yes' outcome='6'>
            <column datatype='integer' name='row_id' ordinal='0' />
            <column datatype='integer' name='id' ordinal='1' />
            <column datatype='integer' name='State_Code' ordinal='2' />
            <column datatype='string' name='State_Name' ordinal='3' />
            <column datatype='string' name='State_ab' ordinal='4' />
            <column datatype='string' name='County' ordinal='5' />
            <column datatype='string' name='City' ordinal='6' />
            <column datatype='string' name='Place' ordinal='7' />
            <column datatype='string' name='Type' ordinal='8' />
            <column datatype='string' name='Primary' ordinal='9' />
            <column datatype='integer' name='Zip_Code' ordinal='10' />
            <column datatype='integer' name='Area_Code' ordinal='11' />
            <column datatype='integer' name='ALand' ordinal='12' />
            <column datatype='integer' name='AWater' ordinal='13' />
            <column datatype='real' name='Lat' ordinal='14' />
            <column datatype='real' name='Lon' ordinal='15' />
            <column datatype='integer' name='id2' ordinal='16' />
            <column datatype='string' name='State_Name3' ordinal='17' />
            <column datatype='integer' name='Mean' ordinal='18' />
            <column datatype='integer' name='Median' ordinal='19' />
            <column datatype='integer' name='Stdev' ordinal='20' />
            <column datatype='real' name='sum_w' ordinal='21' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[us income cleaned]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:V10001:no:A1:V10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>row_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[row_id]</local-name>
            <parent-name>[us income cleaned]</parent-name>
            <remote-alias>row_id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us income cleaned_10542845CBA94335A73FD0AFB0C5D464]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[us income cleaned]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us income cleaned_10542845CBA94335A73FD0AFB0C5D464]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State_Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[State_Code]</local-name>
            <parent-name>[us income cleaned]</parent-name>
            <remote-alias>State_Code</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us income cleaned_10542845CBA94335A73FD0AFB0C5D464]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State_Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State_Name]</local-name>
            <parent-name>[us income cleaned]</parent-name>
            <remote-alias>State_Name</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us income cleaned_10542845CBA94335A73FD0AFB0C5D464]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State_ab</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State_ab]</local-name>
            <parent-name>[us income cleaned]</parent-name>
            <remote-alias>State_ab</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us income cleaned_10542845CBA94335A73FD0AFB0C5D464]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>County</remote-name>
            <remote-type>130</remote-type>
            <local-name>[County]</local-name>
            <parent-name>[us income cleaned]</parent-name>
            <remote-alias>County</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us income cleaned_10542845CBA94335A73FD0AFB0C5D464]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[us income cleaned]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us income cleaned_10542845CBA94335A73FD0AFB0C5D464]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Place</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Place]</local-name>
            <parent-name>[us income cleaned]</parent-name>
            <remote-alias>Place</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us income cleaned_10542845CBA94335A73FD0AFB0C5D464]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Type]</local-name>
            <parent-name>[us income cleaned]</parent-name>
            <remote-alias>Type</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us income cleaned_10542845CBA94335A73FD0AFB0C5D464]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Primary</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Primary]</local-name>
            <parent-name>[us income cleaned]</parent-name>
            <remote-alias>Primary</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us income cleaned_10542845CBA94335A73FD0AFB0C5D464]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Zip_Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Zip_Code]</local-name>
            <parent-name>[us income cleaned]</parent-name>
            <remote-alias>Zip_Code</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us income cleaned_10542845CBA94335A73FD0AFB0C5D464]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Area_Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Area_Code]</local-name>
            <parent-name>[us income cleaned]</parent-name>
            <remote-alias>Area_Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us income cleaned_10542845CBA94335A73FD0AFB0C5D464]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ALand</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ALand]</local-name>
            <parent-name>[us income cleaned]</parent-name>
            <remote-alias>ALand</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us income cleaned_10542845CBA94335A73FD0AFB0C5D464]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AWater</remote-name>
            <remote-type>20</remote-type>
            <local-name>[AWater]</local-name>
            <parent-name>[us income cleaned]</parent-name>
            <remote-alias>AWater</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us income cleaned_10542845CBA94335A73FD0AFB0C5D464]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Lat]</local-name>
            <parent-name>[us income cleaned]</parent-name>
            <remote-alias>Lat</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us income cleaned_10542845CBA94335A73FD0AFB0C5D464]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lon</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Lon]</local-name>
            <parent-name>[us income cleaned]</parent-name>
            <remote-alias>Lon</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us income cleaned_10542845CBA94335A73FD0AFB0C5D464]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id2</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id2]</local-name>
            <parent-name>[us income cleaned]</parent-name>
            <remote-alias>id2</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us income cleaned_10542845CBA94335A73FD0AFB0C5D464]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State_Name3</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State_Name3]</local-name>
            <parent-name>[us income cleaned]</parent-name>
            <remote-alias>State_Name3</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us income cleaned_10542845CBA94335A73FD0AFB0C5D464]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mean</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Mean]</local-name>
            <parent-name>[us income cleaned]</parent-name>
            <remote-alias>Mean</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us income cleaned_10542845CBA94335A73FD0AFB0C5D464]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Median</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Median]</local-name>
            <parent-name>[us income cleaned]</parent-name>
            <remote-alias>Median</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us income cleaned_10542845CBA94335A73FD0AFB0C5D464]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stdev</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Stdev]</local-name>
            <parent-name>[us income cleaned]</parent-name>
            <remote-alias>Stdev</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us income cleaned_10542845CBA94335A73FD0AFB0C5D464]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sum_w</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sum_w]</local-name>
            <parent-name>[us income cleaned]</parent-name>
            <remote-alias>sum_w</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us income cleaned_10542845CBA94335A73FD0AFB0C5D464]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='A Land' datatype='integer' name='[ALand]' role='measure' type='quantitative' />
      <column caption='A Water' datatype='integer' name='[AWater]' role='measure' type='quantitative' />
      <column caption='Area Code' datatype='integer' name='[Area_Code]' role='dimension' type='ordinal' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Lon]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='State Code' datatype='integer' name='[State_Code]' role='dimension' type='ordinal' />
      <column caption='State Name3' datatype='string' name='[State_Name3]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='State Name' datatype='string' name='[State_Name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='State ab' datatype='string' name='[State_ab]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column aggregation='Sum' caption='Zip Code' datatype='integer' default-format='*00000' name='[Zip_Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <_.fcp.ObjectModelTableType.true...column caption='us income cleaned' datatype='table' name='[__tableau_internal_object_id__].[us income cleaned_10542845CBA94335A73FD0AFB0C5D464]' role='measure' type='quantitative' />
      <column caption='Id2' datatype='integer' name='[id2]' role='dimension' type='ordinal' />
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column caption='Row Id' datatype='integer' name='[row_id]' role='dimension' type='ordinal' />
      <column caption='Sum W' datatype='real' name='[sum_w]' role='measure' type='quantitative' />
      <column-instance column='[State_Name]' derivation='None' name='[none:State_Name:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:State_Name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alaska&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='us income cleaned' id='us income cleaned_10542845CBA94335A73FD0AFB0C5D464'>
            <properties context=''>
              <relation connection='excel-direct.0q0rsvo0hrybku1cd4uma02jhhz8' name='us income cleaned' table='[&apos;us income cleaned$&apos;]' type='table'>
                <columns gridOrigin='A1:V10001:no:A1:V10001:0' header='yes' outcome='6'>
                  <column datatype='integer' name='row_id' ordinal='0' />
                  <column datatype='integer' name='id' ordinal='1' />
                  <column datatype='integer' name='State_Code' ordinal='2' />
                  <column datatype='string' name='State_Name' ordinal='3' />
                  <column datatype='string' name='State_ab' ordinal='4' />
                  <column datatype='string' name='County' ordinal='5' />
                  <column datatype='string' name='City' ordinal='6' />
                  <column datatype='string' name='Place' ordinal='7' />
                  <column datatype='string' name='Type' ordinal='8' />
                  <column datatype='string' name='Primary' ordinal='9' />
                  <column datatype='integer' name='Zip_Code' ordinal='10' />
                  <column datatype='integer' name='Area_Code' ordinal='11' />
                  <column datatype='integer' name='ALand' ordinal='12' />
                  <column datatype='integer' name='AWater' ordinal='13' />
                  <column datatype='real' name='Lat' ordinal='14' />
                  <column datatype='real' name='Lon' ordinal='15' />
                  <column datatype='integer' name='id2' ordinal='16' />
                  <column datatype='string' name='State_Name3' ordinal='17' />
                  <column datatype='integer' name='Mean' ordinal='18' />
                  <column datatype='integer' name='Median' ordinal='19' />
                  <column datatype='integer' name='Stdev' ordinal='20' />
                  <column datatype='real' name='sum_w' ordinal='21' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='County Income'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='20'>Average Income by County</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='us income cleaned (us income cleaned)' name='federated.008fz9d0aywz8x1e81epz1dnocyg' />
          </datasources>
          <datasource-dependencies datasource='federated.008fz9d0aywz8x1e81epz1dnocyg'>
            <column datatype='string' name='[County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='integer' name='[Mean]' role='measure' type='quantitative' />
            <column-instance column='[Mean]' derivation='Avg' name='[avg:Mean:qk]' pivot='key' type='quantitative' />
            <column-instance column='[County]' derivation='None' name='[none:County:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.008fz9d0aywz8x1e81epz1dnocyg].[none:County:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.008fz9d0aywz8x1e81epz1dnocyg].[avg:Mean:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.008fz9d0aywz8x1e81epz1dnocyg].[none:County:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.008fz9d0aywz8x1e81epz1dnocyg].[none:County:nk]</rows>
        <cols>[federated.008fz9d0aywz8x1e81epz1dnocyg].[avg:Mean:qk]</cols>
      </table>
      <simple-id uuid='{E78A3C87-9E3A-4C53-88B2-5B1B5C2DD1DC}' />
    </worksheet>
    <worksheet name='Land Area'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='20'>Top 15 States by Land Area</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='us income cleaned (us income cleaned)' name='federated.008fz9d0aywz8x1e81epz1dnocyg' />
          </datasources>
          <datasource-dependencies datasource='federated.008fz9d0aywz8x1e81epz1dnocyg'>
            <column caption='A Land' datatype='integer' name='[ALand]' role='measure' type='quantitative' />
            <column caption='State Name' datatype='string' name='[State_Name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State_Name]' derivation='None' name='[none:State_Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[ALand]' derivation='Sum' name='[sum:ALand:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.008fz9d0aywz8x1e81epz1dnocyg].[none:State_Name:nk]'>
            <groupfilter count='15' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([ALand])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:State_Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.008fz9d0aywz8x1e81epz1dnocyg].[none:State_Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.008fz9d0aywz8x1e81epz1dnocyg].[sum:ALand:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.008fz9d0aywz8x1e81epz1dnocyg].[none:State_Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.008fz9d0aywz8x1e81epz1dnocyg].[none:State_Name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.008fz9d0aywz8x1e81epz1dnocyg].[none:State_Name:nk]</rows>
        <cols>[federated.008fz9d0aywz8x1e81epz1dnocyg].[sum:ALand:qk]</cols>
      </table>
      <simple-id uuid='{6A1A84F8-4605-4C21-BB41-21BDA988F5AD}' />
    </worksheet>
    <worksheet name='State Income'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='20'>Average Income by State</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='us income cleaned (us income cleaned)' name='federated.008fz9d0aywz8x1e81epz1dnocyg' />
          </datasources>
          <datasource-dependencies datasource='federated.008fz9d0aywz8x1e81epz1dnocyg'>
            <column datatype='integer' name='[Mean]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Median]' role='measure' type='quantitative' />
            <column caption='State Name' datatype='string' name='[State_Name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Mean]' derivation='Avg' name='[avg:Mean:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Median]' derivation='Avg' name='[avg:Median:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State_Name]' derivation='None' name='[none:State_Name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.008fz9d0aywz8x1e81epz1dnocyg].[none:State_Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.008fz9d0aywz8x1e81epz1dnocyg].[avg:Mean:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.008fz9d0aywz8x1e81epz1dnocyg].[none:State_Name:nk]' />
              <lod column='[federated.008fz9d0aywz8x1e81epz1dnocyg].[avg:Median:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.008fz9d0aywz8x1e81epz1dnocyg].[none:State_Name:nk]</rows>
        <cols>[federated.008fz9d0aywz8x1e81epz1dnocyg].[avg:Mean:qk]</cols>
      </table>
      <simple-id uuid='{6F74C1AF-0089-4E0E-A826-2ACB4B53346B}' />
    </worksheet>
    <worksheet name='Type Income'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='20'>Average Income by State</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='us income cleaned (us income cleaned)' name='federated.008fz9d0aywz8x1e81epz1dnocyg' />
          </datasources>
          <datasource-dependencies datasource='federated.008fz9d0aywz8x1e81epz1dnocyg'>
            <column datatype='integer' name='[Mean]' role='measure' type='quantitative' />
            <column datatype='string' name='[Type]' role='dimension' type='nominal' />
            <column-instance column='[Mean]' derivation='Avg' name='[avg:Mean:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Type]' derivation='None' name='[none:Type:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.008fz9d0aywz8x1e81epz1dnocyg].[none:Type:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.008fz9d0aywz8x1e81epz1dnocyg].[avg:Mean:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.008fz9d0aywz8x1e81epz1dnocyg].[none:Type:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.008fz9d0aywz8x1e81epz1dnocyg].[none:Type:nk]</rows>
        <cols>[federated.008fz9d0aywz8x1e81epz1dnocyg].[avg:Mean:qk]</cols>
      </table>
      <simple-id uuid='{97D574A0-DD98-4A29-AB18-F5DAD400E5B9}' />
    </worksheet>
    <worksheet name='Water Area'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='20'>Top 15 States by Water Area</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='us income cleaned (us income cleaned)' name='federated.008fz9d0aywz8x1e81epz1dnocyg' />
          </datasources>
          <datasource-dependencies datasource='federated.008fz9d0aywz8x1e81epz1dnocyg'>
            <column caption='A Water' datatype='integer' name='[AWater]' role='measure' type='quantitative' />
            <column caption='State Name' datatype='string' name='[State_Name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State_Name]' derivation='None' name='[none:State_Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[AWater]' derivation='Sum' name='[sum:AWater:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.008fz9d0aywz8x1e81epz1dnocyg].[none:State_Name:nk]' direction='DESC' using='[federated.008fz9d0aywz8x1e81epz1dnocyg].[sum:AWater:qk]' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.008fz9d0aywz8x1e81epz1dnocyg].[none:State_Name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.008fz9d0aywz8x1e81epz1dnocyg].[sum:AWater:qk]</rows>
        <cols>[federated.008fz9d0aywz8x1e81epz1dnocyg].[none:State_Name:nk]</cols>
      </table>
      <simple-id uuid='{09FA41AA-1757-495D-9BAC-8CEA0930EDF8}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Land Area'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.008fz9d0aywz8x1e81epz1dnocyg].[none:State_Name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.008fz9d0aywz8x1e81epz1dnocyg].[none:State_Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9CECAEC4-9F14-45E3-8735-0991225F2BBF}' />
    </window>
    <window class='worksheet' name='Water Area'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.008fz9d0aywz8x1e81epz1dnocyg].[none:State_Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FC463B99-C8C5-4A26-BD44-1F4B45E9067A}' />
    </window>
    <window class='worksheet' name='State Income'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.008fz9d0aywz8x1e81epz1dnocyg].[none:State_Name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.008fz9d0aywz8x1e81epz1dnocyg].[:Measure Names]</field>
            <field>[federated.008fz9d0aywz8x1e81epz1dnocyg].[none:State_Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{531FB2EC-3528-4391-9C80-F8D4A26C424E}' />
    </window>
    <window class='worksheet' name='County Income'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.008fz9d0aywz8x1e81epz1dnocyg].[none:County:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.008fz9d0aywz8x1e81epz1dnocyg].[none:County:nk]</field>
            <field>[federated.008fz9d0aywz8x1e81epz1dnocyg].[none:State_Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6B428E75-3448-47EE-B286-00B0BBD7D30A}' />
    </window>
    <window class='worksheet' maximized='true' name='Type Income'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.008fz9d0aywz8x1e81epz1dnocyg].[none:Type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.008fz9d0aywz8x1e81epz1dnocyg].[none:Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2B4FCD40-B9EC-4D30-9BDC-31B9ED706CED}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='County Income' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Land Area' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='State Income' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Type Income' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Water Area' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
